name: Build and Publish to PyPI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        cd python
        python -m pip install --upgrade pip
        pip install build pytest
        pip install -e .[dev]
    
    - name: Run tests
      run: |
        cd python
        python -m pytest

  check-version:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    outputs:
      version-changed: ${{ steps.check.outputs.changed }}
      current-version: ${{ steps.check.outputs.version }}
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 2  # Need at least 2 commits to compare
    
    - name: Check if version changed
      id: check
      run: |
        # Get current version
        CURRENT_VERSION=$(grep '^version = ' python/pyproject.toml | sed 's/version = "\(.*\)"/\1/')
        echo "version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
        
        # Check if version line changed in this commit
        if git diff HEAD~1 HEAD --name-only | grep -q "python/pyproject.toml"; then
          if git diff HEAD~1 HEAD python/pyproject.toml | grep -q '^[+-]version = '; then
            echo "changed=true" >> $GITHUB_OUTPUT
            echo "✅ Version changed to $CURRENT_VERSION"
          else
            echo "changed=false" >> $GITHUB_OUTPUT
            echo "ℹ️  pyproject.toml changed but version stayed the same"
          fi
        else
          echo "changed=false" >> $GITHUB_OUTPUT
          echo "ℹ️  pyproject.toml not modified in this commit"
        fi

  build:
    needs: [test, check-version]
    runs-on: ubuntu-latest
    if: needs.check-version.outputs.version-changed == 'true'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.10"
    
    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build
    
    - name: Build package
      run: |
        cd python
        echo "Building package version ${{ needs.check-version.outputs.current-version }}..."
        python -m build
        echo "Built files:"
        ls -la dist/
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist
        path: python/dist/*

  publish:
    needs: [build, check-version]
    runs-on: ubuntu-latest
    if: needs.check-version.outputs.version-changed == 'true'
    environment: konfigure-release
    permissions:
      id-token: write  # Required for PyPI trusted publishing
      contents: read
    
    steps:
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: dist
        path: dist/
    
    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        packages-dir: dist/
        verbose: true 